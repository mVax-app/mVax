apply plugin: 'com.android.application'

def versionMajor = 3
def versionMinor = 6
def versionPatch = 0

android {
    signingConfigs {
        debug {
            keyAlias 'mVaxDebugKey'
            keyPassword 'debugKey'
            storeFile file('../keystores/debug_keystore')
            storePassword 'debugKeyStore'
        }
    }
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.mvax"
        minSdkVersion 24
        targetSdkVersion 27
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    flavorDimensions "default"
    productFlavors {
        dev {
            applicationId 'com.mvax.dev'
            minSdkVersion 24
            targetSdkVersion 27
            testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        }
        qa {
            applicationId 'com.mvax.qa'
            minSdkVersion 24
            targetSdkVersion 27
            testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        }
        prod {
            applicationId 'com.mvax.prod'
            minSdkVersion 24
            targetSdkVersion 27
            testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        }
    }
    buildTypes {
        debug {
            versionNameSuffix ".debug"
            resValue "string", "app_version",
                    "${defaultConfig.versionName}${versionNameSuffix}"
            debuggable true
            minifyEnabled false
        }
        release {
            resValue "string", "app_version",
                    "${defaultConfig.versionName}"
            debuggable false
            minifyEnabled true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        // ultimately we may want checkReleaseBuilds and abortOnError to be true
        checkReleaseBuilds false
        abortOnError false
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.jjoe64:graphview:4.2.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    androidTestImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation 'com.google.firebase:firebase-database:16.0.1'
    implementation 'com.google.firebase:firebase-auth:16.0.2'
    implementation 'com.google.firebase:firebase-functions:16.1.0'
    implementation 'com.google.android.gms:play-services-auth:15.0.1'
    implementation 'com.algolia:algoliasearch-android:3.10.1'
    implementation 'joda-time:joda-time:2.9.9'
    implementation 'com.github.yesidlazaro:GmailBackground:1.2.0'
    implementation 'com.wdullaer:materialdatetimepicker:3.6.2'
    implementation 'com.prolificinteractive:material-calendarview:1.4.3'
    implementation 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:2.1.0'
    implementation 'com.github.travijuu:numberpicker:1.0.7'
}

apply plugin: 'com.google.gms.google-services'
